{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Devops Project Lab Chile !","text":""},{"location":"#table-of-contents","title":"Table of Contents","text":"<p>Month 01</p><p>week 1, week 2, week 3, week 4</p> <p>Month 02</p><p>week 5, week 6, week 7, week 8</p> <p>Month 03</p><p>week 9, week 10, week 11, week 12</p>"},{"location":"__init__/","title":"init","text":""},{"location":"month_01/","title":"DEVOPS PROJECT LAB CHILE","text":""},{"location":"month_01/week_01/","title":"1\ufe0f\u20e3 Week 1","text":"Topic Description Basic Concepts Introduction to fundamental concepts. Git and GitHub Overview of Git version control and GitHub. Jira Introduction to Jira for project management."},{"location":"month_01/week_01/concepts/","title":"Basic Concepts","text":""},{"location":"month_01/week_01/concepts/#software-development-concepts","title":"Software Development Concepts","text":"<ol> <li> <p>Framework    A framework is a pre-built structure or foundation that provides reusable code and tools to facilitate software development. It defines a standard way to build and deploy applications, including libraries, APIs, and best practices. Examples include Django (Python), React (JavaScript), and Spring (Java).</p> </li> <li> <p>Software Development Life Cycle (SDLC)    SDLC is a structured process that guides the development of software from planning to deployment and maintenance. It typically includes stages such as planning, analysis, design, implementation, testing, deployment, and maintenance.</p> </li> <li> <p>eXtreme Programming (XP)    XP is an agile software development methodology that emphasizes frequent releases, continuous feedback, and collaboration between developers and customers. It promotes practices like test-driven development (TDD), pair programming, and continuous integration.</p> </li> <li> <p>SCRUM    SCRUM is an agile project management framework used for developing software in iterative cycles called sprints (usually 1-4 weeks). It involves roles like the Product Owner, Scrum Master, and Development Team, and uses ceremonies such as daily stand-ups, sprint planning, and retrospectives.</p> </li> <li> <p>Kanban    Kanban is a lean project management methodology that focuses on visualizing work, limiting work in progress (WIP), and improving workflow efficiency. It uses a board with columns (e.g., To Do, In Progress, Done) to track tasks.</p> </li> <li> <p>Native / Hybrid Mobile Applications </p> </li> <li> <p>Native applications: Apps built specifically for a particular mobile platform (iOS or Android) using platform-specific languages (Swift for iOS, Kotlin/Java for Android). They offer high performance and access to native device features.  </p> </li> <li> <p>Hybrid applications: Apps that combine web technologies (HTML, CSS, JavaScript) with a native wrapper to run on multiple platforms. They use frameworks like Ionic or React Native and are easier to maintain than native apps.</p> </li> </ol>"},{"location":"month_01/week_01/concepts/#general-software-concepts","title":"General Software Concepts","text":"<ol> <li> <p>Software    Software is a collection of programs, instructions, and data that enable a computer to perform specific tasks. It is divided into system software (like operating systems) and application software (like Microsoft Word or Google Chrome).</p> </li> <li> <p>Operating System (OS)    An OS is system software that manages computer hardware and software resources while providing a user interface. Examples include Windows, macOS, Linux, Android, and iOS.</p> </li> <li> <p>Application    An application (app) is software designed to perform specific tasks for users, such as word processing, web browsing, or email. Applications can be desktop-based, web-based, or mobile-based.</p> </li> <li> <p>CRUD (Create, Read, Update, Delete)     CRUD represents the four basic operations performed on data in a database or system:</p> <ul> <li>Create: Add new records or data.</li> <li>Read: Retrieve existing data.</li> <li>Update: Modify existing data.</li> <li>Delete: Remove existing data.</li> </ul> </li> </ol>"},{"location":"month_01/week_01/concepts/#cloud-computing-models","title":"Cloud Computing Models","text":"<ol> <li> <p>Software as a Service (SaaS)     A cloud computing model where users access software applications over the internet without installing them on their devices. Examples: Gmail, Dropbox, Microsoft 365.</p> </li> <li> <p>Platform as a Service (PaaS)     A cloud computing model that provides a platform for developers to build, test, and deploy applications without managing infrastructure. Examples: Google App Engine, AWS Elastic Beanstalk.</p> </li> <li> <p>Infrastructure as a Service (IaaS)     A cloud computing model that provides virtualized computing resources over the internet, such as servers, storage, and networking. Users have more control over the infrastructure. Examples: AWS EC2, Microsoft Azure Virtual Machines.</p> </li> </ol>"},{"location":"month_01/week_01/git/","title":"Git Introduction","text":""},{"location":"month_01/week_01/git/#what-is-version-control","title":"What is Version Control?","text":"<ul> <li>Version Control (VC), also known as Source Control (SCM), manages changes to documents, code, and other data.</li> <li>Common tasks include tracking changes, updates, resolving conflicts, and branching.</li> </ul>"},{"location":"month_01/week_01/git/#types-of-version-control-systems","title":"Types of Version Control Systems","text":"<ul> <li>Centralized: CVS, Perforce, SVN, TFS.</li> <li>Distributed: Git, Mercurial.</li> </ul>"},{"location":"month_01/week_01/git/#introduction-to-git","title":"Introduction to Git","text":"<ul> <li>A distributed version control system focusing on speed, integrity, and non-linear workflows.</li> <li>Created by Linus Torvalds in 2005 for Linux kernel development.</li> </ul>"},{"location":"month_01/week_01/git/#installing-git","title":"Installing Git","text":"<ul> <li>Linux: <code>apt-get install git</code> (Debian) / <code>yum install git</code> (Red Hat).</li> <li>Windows: Download from git-scm.com.</li> <li>Mac: Install via Homebrew.</li> </ul>"},{"location":"month_01/week_01/git/#git-configuration","title":"Git Configuration","text":"<ul> <li>Set user identity:   <pre><code>git config --global user.name \"Your Name\"\ngit config --global user.email \"your@email.com\"\n</code></pre></li> <li>Set default editor and view settings with <code>git config --list</code>.</li> </ul>"},{"location":"month_01/week_01/git/#basic-git-concepts","title":"Basic Git Concepts","text":"<ul> <li>Repository (.git): Stores all project history.</li> <li>Working Directory: Current state of project files.</li> <li>Commit: Snapshot of changes.</li> <li>Staging Area: Prepares changes before committing.</li> </ul>"},{"location":"month_01/week_01/git/#creating-cloning-repositories","title":"Creating &amp; Cloning Repositories","text":"<ul> <li>Create new repository: <pre><code>git init\n</code></pre></li> <li>Clone an existing repository: <pre><code>git clone &lt;URL&gt;\n</code></pre></li> </ul>"},{"location":"month_01/week_01/git/#ignoring-files","title":"Ignoring Files","text":"<ul> <li><code>.gitignore</code> prevents tracking unnecessary files like system files, build artifacts, and credentials.</li> </ul>"},{"location":"month_01/week_01/git/#key-git-commands","title":"Key Git Commands","text":"<ul> <li>Adding &amp; Committing:   <pre><code>git add &lt;file&gt;\ngit commit -m \"Commit message\"\n</code></pre></li> <li>Pushing &amp; Pulling:   <pre><code>git push\ngit fetch\ngit pull\n</code></pre></li> <li>Branching:   <pre><code>git branch &lt;name&gt;  # Create branch\ngit checkout &lt;name&gt;  # Switch branch\ngit branch -d &lt;name&gt;  # Delete branch\n</code></pre></li> </ul>"},{"location":"month_01/week_01/git/#git-workflow","title":"Git Workflow","text":"<ol> <li>Clone repository (<code>git clone</code>).</li> <li>Create/Switch branch (<code>git branch</code>, <code>git checkout</code>).</li> <li>Modify &amp; stage changes (<code>git add</code>).</li> <li>Review changes (<code>git status</code>, <code>git log</code>).</li> <li>Commit changes (<code>git commit</code>).</li> <li>Push changes (<code>git push</code>).</li> <li>Sync with remote (<code>git fetch</code>, <code>git pull</code>).</li> </ol>"},{"location":"month_01/week_01/git/#useful-resources","title":"Useful Resources","text":"<ul> <li>Git Book \ud83d\udcd6 \u2013 Official, in-depth guide covering everything from basics to advanced workflows. Best for structured learning.  </li> <li>Atlassian Git Tutorials \ud83c\udf93 \u2013 Practical, beginner-friendly step-by-step guides with real-world examples.  </li> <li>Try Git \u26a1 \u2013 Interactive, browser-based tutorial for quickly learning Git basics.  </li> <li>Learn Git Branching \ud83c\udf3f \u2013 Visual, hands-on exercises to master Git branching concepts.  </li> </ul>"},{"location":"month_01/week_01/jira/","title":"Tools: Jira and Confluence","text":""},{"location":"month_01/week_01/jira/#agenda","title":"Agenda","text":"<p>The document covers the tools Jira and Confluence, including their key functionalities:</p> <ol> <li>Jira as a Project Management Tool </li> <li>Overview  </li> <li>Issues, filtering, and dashboards  </li> <li> <p>GreenHopper extension  </p> </li> <li> <p>Confluence as a Team Collaboration Tool </p> </li> <li>Overview  </li> <li>Page management  </li> <li>Meeting notes  </li> <li>Macros, import/export  </li> <li>Additional features  </li> </ol>"},{"location":"month_01/week_01/jira/#jira-overview","title":"Jira Overview","text":"<p>Jira is a flexible project management tool that allows customization of workflows, integration with existing systems, and the addition of plugins. It is commonly used for:  </p> <ul> <li>Bug tracking for a single application  </li> <li>Managing software development across multiple products  </li> <li>Running multiple projects within a company  </li> </ul>"},{"location":"month_01/week_01/jira/#jira-terminology","title":"Jira Terminology","text":"<ul> <li>Project: A collection of issues, each identified by a name and key.  </li> <li>Issue: Represents different entities depending on the organization, such as a software bug, project task, helpdesk ticket, or product improvement.  </li> </ul>"},{"location":"month_01/week_01/jira/#jira-components-and-versions","title":"Jira Components and Versions","text":"<ul> <li>Components: Subsections of a project used to group issues into smaller parts.  </li> <li>Versions: Points-in-time in a project, used for release planning (e.g., application builds, sprints). Versions can have different statuses: Released, Unreleased, Archived, or Overdue.  </li> </ul>"},{"location":"month_01/week_01/jira/#jira-issues-and-types","title":"Jira Issues and Types","text":"<p>Jira issues represent logical pieces of a project's scope. There are two types of issues: parent and child (sub-issues). Each issue follows a workflow with different states and transitions.  </p> <ul> <li>Epic &amp; Story: Describe project scope within requirements management.  </li> <li>Task &amp; Technical Task: Represent generic project work, with technical tasks often related to specific functionalities.  </li> <li>Bug &amp; Sub-Bug: Describe problems affecting functionality, supporting Agile best practices.  </li> <li>Improvement, New Feature &amp; Risk: Used for documenting changes, feature requests, and risk analysis.  </li> </ul>"},{"location":"month_01/week_01/jira/#jira-workflow","title":"Jira Workflow","text":"<p>Issues move through different statuses (e.g., Open, In Progress, Resolved, Closed) via transitions (e.g., Start Progress, Resolve, Reopen).  </p>"},{"location":"month_01/week_01/jira/#filtering-and-dashboards","title":"Filtering and Dashboards","text":"<ul> <li>Simple Search: Basic issue search.  </li> <li>Advanced Search (JQL - Jira Query Language): SQL-like queries for complex filtering.  </li> <li>Quick Search: Fast issue lookup with minimal typing.  </li> <li>Issue Filters: Saved searches that can be displayed in dashboards and shared with others.  </li> <li>Dashboards: Provide visual information using gadgets, which display charts, reports, and team collaboration tools.  </li> </ul>"},{"location":"month_01/week_01/jira/#confluence-overview","title":"Confluence Overview","text":"<p>Confluence is an enterprise wiki designed to help teams share and collaborate efficiently.  </p> <ul> <li>Key Features:</li> <li>Create, share, and discuss ideas, files, and projects.  </li> <li>Reduce email and meetings for better efficiency.  </li> </ul>"},{"location":"month_01/week_01/jira/#confluence-terminology","title":"Confluence Terminology","text":"<ul> <li>Space: A collection of wiki pages.  </li> <li>Pages: Main content storage for documents, notes, and specifications.  </li> <li>Blog Posts: Used for announcements, status reports, or journal entries.  </li> <li>Comments: Remarks or questions added to pages.  </li> <li>Bookmarks: Links to external content.  </li> </ul>"},{"location":"month_01/week_01/jira/#page-management-in-confluence","title":"Page Management in Confluence","text":"<p>Users can: - Create, edit, move, copy, and delete pages. - Search content, export in PDF/Word/HTML/XML formats. - Organize content using parent-child relationships. - Collaborate via comments and view page history.  </p>"},{"location":"month_01/week_01/jira/#wiki-markup-in-confluence","title":"Wiki Markup in Confluence","text":"<ul> <li>Headings: <code>h1.</code>, <code>h2.</code> for different levels.  </li> <li>Lists: <code>-</code> for bullets, <code>#</code> for numbered lists.  </li> <li>Tables: <code>||heading 1||heading 2||heading 3||</code> for structured data representation.  </li> </ul>"},{"location":"month_01/week_01/jira/#conclusion","title":"Conclusion","text":"<p>The document provides an overview of Jira and Confluence, explaining their role in project management and team collaboration. Jira is primarily used for tracking tasks, bugs, and development, while Confluence is a documentation and collaboration tool that helps teams share information efficiently.</p>"},{"location":"month_01/week_02/","title":"DEVOPS PROJECT LAB CHILE","text":""},{"location":"month_02/","title":"DEVOPS PROJECT LAB CHILE","text":"<p>\ud83d\udee0\ufe0f Work in Progress ...</p>"},{"location":"month_03/","title":"DEVOPS PROJECT LAB CHILE","text":"<p>\ud83d\udee0\ufe0f Work in Progress ...</p>"}]}